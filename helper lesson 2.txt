
-- Разбор анкет 

- Я узнал, что качественную подготовку Ваших резюме делают после специализированных курсов школы ученикам с хорошимию оценаками
- Я могу лишь сказать на что я обращаю внимание когда смотрю резюме кандидатов
	- профиль в ЛинкедИн
	- совпадение информации с резюме 80-90% минимум
	- Фото. Так ты запоминаешь человека
	- умное порфтолио (если есть ссылки они все работают, если это пример сайта, я могу увидеть результат, если это пример программы - обязательно описаны шаги как её запустить)




ВВЕДЕНИЕ ПОНЯТИЯ ТИПЫ ДАННЫХ

-- JS

Number.MAX_VALUE has the value of 1.7976931348623157e+308.
Number.MIN_VALUE has a value of 5e-324.


-- PYTHON

изменяемые (списки, словари и множества)
неизменяемые (числа, строки и кортежи)
упорядоченные (списки, кортежи, строки и словари)
неупорядоченные (множества)

Числа (Numeric Type)
  int – целое число
  float – число с плавающей точкой
  complex – комплексное число

Строки (Text Sequence Type )
  str

Списки (Sequence Type)
  list – список // упорядоченные изменяемые коллекции объектов произвольных типов (почти как массив, но типы могут отличаться).
  tuple – кортеж  // по сути - неизменяемый список.
  range – диапазон   // функция цикла - range(6) или range(1,7,1)

Словари (Mapping Types)
  dict – словарь   // тоже самое что и объект в js

Множества (Set Types)
  set – множество
  frozenset – неизменяемое множество   // Единственное отличие set от frozenset заключается в том, что set - изменяемый тип данных, а frozenset - нет. Примерно похожая ситуация с списками и кортежами.
  
Логические переменные (Boolean Type)

None (неопределенное значение переменной)

Бинарные списки (Binary Sequence Types)
  bytes – байты
  bytearray – массивы байт
  memoryview – специальные объекты для доступа к внутренним данным объекта через protocol buffer


-- JAVA

В Java есть 8 примитивных типов данных:

byte
8-битное целое число
Минимальное значение: -128 (-2 ^ 7)
Максимальное значение: 127 (2 ^ 7 -1)
Значение по умолчанию: 0
Используется для экономии места в больших массивах. Чаще всего вместо int.
Пример: byte c = 65

short
16-битное целое число
Минимальное значение: -32,768 (-2 ^ 15)
Максимальное значение: 32,767 (2 ^ 15 – 1)
Значение по умолчанию: 0
Используется для экономии места вместо int.
Пример: short a = 20000, short b = -10000

int
32-битное целое число
Минимальное значение: -2,147,483,648 (-2 ^ 31)
Максимальное значение: 2,147,483,647 (-2 ^ 31 – 1)
Значение по умолчанию: 0
Используется для целых значений в случае, если нет дефицита памяти.
Пример: int i = 2000000000, int h = -1500000000

long
64-битное целое число
Максимальное значение: -9,223,372,036,854,775,808 (-2 ^ 63)
Минимальное значение: 9,223,372,036,854,775,807 (-2 ^ 63 – 1)
Значение по умолчанию: 0L
Используется для хранения больших целочисленных значений.
Пример: long l = 5000000000L, long k = -4000000000L

float
32-битное число с плавающей точкой IEEE 754
Значение по умолчанию: 0.0f
Используется для экономии памяти в больших массивах чисел с плавающей точкой.
Никогда не используется для хранения точных значений (например, денег).
Пример: float f = 112.3f

double
64-битное число двойной точности с плавающей точкой IEEE 754
Значение по умолчанию: 0.0d
Используется для хранения чисел с плавающей точкой (в большинстве случаев).
Никогда не используется для хранения точных значений (например, денег).
Пример: double d = 121.5

boolean
В спецификации размер не указан. Зависит от типа JVM.
Возможные значения: true/false
Значение по умолчанию: false
Используется для определения того, является ли условие истинным.
Пример: boolean flag = true

char
Символ кодировки Unicode 16-bit
Максимальное значение: ‘\u0000’ (или 0)
Минимальное значение: ‘uffff’ (или 65.535)
Используется для хранения любого символа
Пример: char c = ‘C’

К ссылочным типам данных относятся все типы данных, которые создаются с помощью конструкторов. К ним также относятся все классы, создаваемые разработчиками, например, Developer, Car, Person и т.д.
Массивы являются ссылочными типами данных.
Ссылочная переменная может использоваться в качестве ссылки на любой объект определённого типа данных.
Все ссылочные типы имеют значение по умолчанию: null.


ПРЕДСТАВЛЕНИЕ О РАЗМЕРЕ И ДИАПАЗОНЕ ЗНАЧЕНИЙ




ОБЪЯСНЕНИЕ ПОНЯТИЙ «ПЕРЕМЕННАЯ», «ИДЕНТИФИКАТОР»

Переменные – это зарезервированное место в памяти для хранения значения. Другими словами, когда мы объявляем переменную, мы резервируем место в памяти.

В зависимости от типа переменной (целые числа, строки, байте и т.д.) выделяется определённое количество памяти.


ЛИТЕРАЛЫ

Литерал массива — это список из нуля или более выражений, каждое из которых представляет элемент массива, заключённый в квадратные скобки ( [] ). Когда вы создаёте массив, используя литерал массива, он инициализируется с помощью переданных значений, которые будут являться его элементами, длина массива будет равна числу переданных аргументов.


Логический (Boolean) тип имеет два литеральных значения: true и false.


Целые числа могут быть записаны в десятичной, шестнадцатеричной, восьмеричной и двоичной системах счисления.

Десятичный целочисленный литерал состоит из последовательности цифр без ведущего нуля.
Ведущий ноль в целочисленном литерале указывает на то, что он записан в восьмеричной системе счисления. Восьмеричные целые числа состоят только из цифр 0-7.
Ведущие символы 0x (или 0X) указывают на то, что число шестнадцатеричное. Шестнадцатеричные целые числа могут состоять из цифр 0-9 и букв a-f и A-F. 
Ведущие символы 0b (или 0B) указывают на то, что число двоичное. Двоичные числа могут включать в себя только цифры 0 и 1.


Числа с плавающей точкой могут состоять из следующих частей:

Десятичное целое число, которое может иметь знак (символ "+" или "-", стоящий перед числом),
Десятичная точка ("."),
Дробная часть (другое десятичное число),
Экспонента (10^x).


Литерал объекта — это список из нуля или более пар, состоящих из имён свойств и связанных с ними значений, заключённый в фигурные скобки ( {} ). Вам не следует использовать литерал объекта в начале выражения, т.к. это приведёт к ошибке или к поведению, которого вы не ожидаете, потому что символ "{" будет интерпретироваться как начало блока.


Строковый литерал — это ноль или более символов, заключённых в двойные ( " ) или одинарные ( ' ) кавычки. Строка должна быть ограничена кавычками одного типа, т.е. либо обе одинарные, либо обе двойные


Литерал regexp - шаблон между слешами
